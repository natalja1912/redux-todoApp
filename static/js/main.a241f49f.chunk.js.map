{"version":3,"sources":["components/FilterLink.js","components/Header.js","redux/ActionCreators.js","components/AddTodo.js","redux/configureStore.js","redux/reducers.js","components/TodoItem.js","components/TodoList.js","components/VisibleTodoList.js","components/App.js","index.js"],"names":["connect","state","currentFilter","visibilityFilter","filter","children","dispatch","href","onClick","e","preventDefault","type","Header","className","todoId","props","useState","newTodoValue","setNewTodoValue","submitValue","id","text","value","onChange","target","todoApp","combineReducers","todos","action","completed","map","todo","store","createStore","TodoItem","onTodoClick","style","textDecoration","TodoList","getVisibleTodos","todoOnClick","toggleTodo","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"kLAMA,IAiBeA,eArBf,SAAyBC,GACvB,MAAO,CAAEC,cAAeD,EAAME,oBAoBQ,KAAzBH,EAjBI,SAAC,GAAmD,IAAjDI,EAAgD,EAAhDA,OAAQF,EAAwC,EAAxCA,cAAeG,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACrD,OAAIF,IAAWF,EACN,+BAAOG,IAGd,mBACEE,KAAK,IACLC,QAAS,SAACC,GACRA,EAAEC,iBACFJ,EAAS,CAAEK,KAAM,wBAAyBP,YAJ9C,SAOGC,OCHQO,EAbA,WACb,OACE,qCACA,2CACA,8BACC,sBAAMC,UAAU,mBAAhB,oBADD,IACkD,cAAC,EAAD,CAAYT,OAAO,WAAnB,wBAChD,cAAC,EAAD,CAAYA,OAAO,cAAnB,qBACA,cAAC,EAAD,CAAYA,OAAO,iBAAnB,+B,QCTFU,EAAS,EC2BEd,cAAQ,KAAM,KAAdA,EAvBC,SAACe,GAAW,IAAD,EACeC,mBAAS,IADxB,mBAClBC,EADkB,KACJC,EADI,KAGzB,SAASC,IACPJ,EAAMT,SDLC,CAAEK,KAAM,WAAYS,GAAIN,IAAUO,KCKlBJ,IACvBC,EAAgB,IAGlB,OACE,gCACE,uBACEL,UAAU,iBACVF,KAAK,OACLW,MAAOL,EACPM,SAAU,SAACd,GAAD,OAAOS,EAAgBT,EAAEe,OAAOF,UAE5C,wBAAQd,QAAS,kBAAMW,KAAeN,UAAU,kBAAhD,4B,uBCjBAY,EAAUC,YAAgB,CAAEC,MCHb,WAAyB,IAAxB1B,EAAuB,uDAAf,GAAI2B,EAAW,uCACzC,OAAQA,EAAOjB,MACb,IAAK,WACH,MAAM,GAAN,mBACKV,GADL,CAEE,CACEmB,GAAIQ,EAAOR,GACXC,KAAMO,EAAOP,KACbQ,WAAW,KAGjB,IAAK,cACH,OAAO5B,EAAM6B,KAAI,SAACC,GAChB,OAAIA,EAAKX,KAAOQ,EAAOR,GACd,2BACFW,GADL,IAEEF,WAAYE,EAAKF,YAEPE,KAElB,QACE,OAAO9B,IDlB0BE,iBCsBP,WAAiC,IAAhCF,EAA+B,uDAAvB,WAAY2B,EAAW,uCAC9D,OAAQA,EAAOjB,MACb,IAAK,wBACH,OAAOiB,EAAOxB,OAChB,QACE,OAAOH,MDzBF+B,EAAQC,YAAYR,GEUlBS,MAff,YAAwC,IAArBH,EAAoB,EAApBA,KAAMI,EAAc,EAAdA,YACrB,OACI,oBACItB,UAAU,WAEVuB,MAAO,CACHC,eAAgBN,EAAKF,UAAY,eAAiB,QAEtDrB,QAAS,kBAAM2B,EAAYJ,EAAKX,KANpC,SAQKW,EAAKV,MANDU,EAAKX,KCcPkB,MAff,YAA2C,IAAvBX,EAAsB,EAAtBA,MAAOQ,EAAe,EAAfA,YAEzB,OACE,8BACE,oBAAItB,UAAU,YAAd,SACGc,EAAMG,KAAI,SAACC,GACV,OACE,cAAC,EAAD,CAAUA,KAAMA,EAAMI,YAAaA,YCI/C,SAASI,EAAgBZ,EAAOvB,GAC5B,OAAQA,GACJ,IAAK,WACD,OAAOuB,EACX,IAAK,cACD,OAAOA,EAAMvB,QAAO,SAAC2B,GAAD,OAAWA,EAAKF,aACxC,IAAK,iBACD,OAAOF,EAAMvB,QAAO,SAAC2B,GAAD,OAAUA,EAAKF,aACvC,QACI,OAAOF,GAaJ3B,mBAhCf,SAAyBC,GACrB,MAAO,CAAE0B,MAAOY,EAAgBtC,EAAM0B,MAAO1B,EAAME,sBAG5B,SAACG,GACxB,MAAO,CACLkC,YAAa,SAACpB,GAAD,OAAQd,ENJD,SAACc,GACvB,MAAO,CAAET,KAAM,cAAeS,MMGEqB,CAAWrB,QA0BhCpB,EATf,SAAyBe,GACrB,OACI,cAAC,EAAD,CACIY,MAAOZ,EAAMY,MACbQ,YAAapB,EAAMyB,iB,MCZhBE,MAZf,WACE,OACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,sBAAKnB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCTF8B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACI,cAAC,EAAD,MAEJJ,K","file":"static/js/main.a241f49f.chunk.js","sourcesContent":["import { connect } from \"react-redux\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return { currentFilter: state.visibilityFilter }\r\n}\r\n\r\nconst FilterLink = ({ filter, currentFilter, children, dispatch }) => {\r\n  if (filter === currentFilter){\r\n    return <span>{children}</span>\r\n  }\r\n  else return (\r\n    <a\r\n      href=\"#\"\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: \"SET_VISIBILITY_FILTER\", filter });\r\n      }}\r\n    >\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(FilterLink);\r\n","import FilterLink from \"./FilterLink\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n    <h1>Todos App</h1>\r\n    <p>\r\n     <span className=\"header__showText\">Show: </span> <FilterLink filter=\"SHOW_ALL\">All tasks </FilterLink>\r\n      <FilterLink filter=\"SHOW_ACTIVE\">Active </FilterLink>\r\n      <FilterLink filter=\"SHOW_COMPLETED\">Completed </FilterLink>\r\n    </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","let todoId = 0;\r\n\r\nexport const addTodo = (text) => {\r\n    return { type: \"ADD_TODO\", id: todoId++, text: text };\r\n}\r\n\r\nexport const toggleTodo = (id) => {\r\n    return { type: \"TOGGLE_TODO\", id };\r\n}\r\n\r\nexport const setVisibilityFilter = (filter) => {\r\n   return { type: \"SET_VISIBILITY_FILTER\", filter };\r\n}","import { useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { addTodo } from '../redux/ActionCreators';\r\n\r\nconst AddTodo = (props) => {\r\n  const [newTodoValue, setNewTodoValue] = useState(\"\");\r\n\r\n  function submitValue() {\r\n    props.dispatch(addTodo(newTodoValue));\r\n    setNewTodoValue(\"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"todoInputValue\"\r\n        type=\"text\"\r\n        value={newTodoValue}\r\n        onChange={(e) => setNewTodoValue(e.target.value)}\r\n      />\r\n      <button onClick={() => submitValue()} className=\"todoInputButton\">\r\n        Add task\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, null)(AddTodo);\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { todos, visibilityFilter } from './reducers';\r\n\r\nconst todoApp = combineReducers({ todos, visibilityFilter });\r\n\r\nexport const store = createStore(todoApp);\r\n","export const todos = (state = [], action) => {\r\n    switch (action.type) {\r\n      case \"ADD_TODO\":\r\n        return [\r\n          ...state,\r\n          {\r\n            id: action.id,\r\n            text: action.text,\r\n            completed: false\r\n          }\r\n        ];\r\n      case \"TOGGLE_TODO\":\r\n        return state.map((todo) => {\r\n          if (todo.id === action.id) {\r\n            return {\r\n              ...todo,\r\n              completed: !todo.completed\r\n            };\r\n          } else return todo;\r\n        });\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export const visibilityFilter = (state = \"SHOW_ALL\", action) => {\r\n    switch (action.type) {\r\n      case \"SET_VISIBILITY_FILTER\":\r\n        return action.filter;\r\n      default:\r\n        return state;\r\n    }\r\n  };","function TodoItem({todo, onTodoClick}) {\r\n    return (\r\n        <li\r\n            className=\"todoItem\"\r\n            key={todo.id}\r\n            style={{\r\n                textDecoration: todo.completed ? \"line-through\" : \"none\"\r\n            }}\r\n            onClick={() => onTodoClick(todo.id)}\r\n        >\r\n            {todo.text}\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default TodoItem;","import TodoItem from './TodoItem';\r\n\r\n\r\nfunction TodoList({ todos, onTodoClick }) {\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"todosList\">\r\n        {todos.map((todo) => {\r\n          return (\r\n            <TodoItem todo={todo} onTodoClick={onTodoClick}></TodoItem>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import { connect } from \"react-redux\";\r\nimport { toggleTodo } from \"../redux/ActionCreators\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return { todos: getVisibleTodos(state.todos, state.visibilityFilter) };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      todoOnClick: (id) => dispatch(toggleTodo(id))\r\n    }\r\n  }\r\n\r\nfunction getVisibleTodos(todos, filter) {\r\n    switch (filter) {\r\n        case \"SHOW_ALL\":\r\n            return todos;\r\n        case \"SHOW_ACTIVE\":\r\n            return todos.filter((todo) => !todo.completed);\r\n        case \"SHOW_COMPLETED\":\r\n            return todos.filter((todo) => todo.completed);\r\n        default:\r\n            return todos;\r\n    }\r\n}\r\n\r\nfunction VisibleTodoList(props) {\r\n    return (\r\n        <TodoList\r\n            todos={props.todos}\r\n            onTodoClick={props.todoOnClick}\r\n        />\r\n    )\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VisibleTodoList);","import { Provider } from \"react-redux\";\nimport Header from \"./Header\";\nimport AddToDo from './AddTodo';\nimport { store } from \"../redux/configureStore\";\nimport VisibleTodoList from \"./VisibleTodoList\";\nimport \"../styles.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header></Header>\n        <AddToDo></AddToDo>\n        <VisibleTodoList></VisibleTodoList>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n      <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}